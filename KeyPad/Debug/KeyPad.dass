
./Debug/KeyPad.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 *
 */
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );
void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8bc 	bl	20000180 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:
#define GPIO_OTYPER ((volatile unsigned short*) GPIO_D + 0x4)

unsigned char Segcodes[16] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71};
unsigned char Key[16]  = {1,2,3,0xA, 4, 5, 6 , 0xB, 7, 8, 9, 0xC, 0xE, 0, 0xF, 0xD};

void app_init(void){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	*GPIO_MODER = 0x55005555;
20000014:	4b06      	ldr	r3, [pc, #24]	; (20000030 <app_init+0x20>)
20000016:	4a07      	ldr	r2, [pc, #28]	; (20000034 <app_init+0x24>)
20000018:	601a      	str	r2, [r3, #0]
	*GPIO_OTYPER = 0x0F00;
2000001a:	4b07      	ldr	r3, [pc, #28]	; (20000038 <app_init+0x28>)
2000001c:	22f0      	movs	r2, #240	; 0xf0
2000001e:	0112      	lsls	r2, r2, #4
20000020:	801a      	strh	r2, [r3, #0]
	*GPIO_PUDR = 0xAA000000;
20000022:	4b06      	ldr	r3, [pc, #24]	; (2000003c <app_init+0x2c>)
20000024:	22aa      	movs	r2, #170	; 0xaa
20000026:	0612      	lsls	r2, r2, #24
20000028:	601a      	str	r2, [r3, #0]
}
2000002a:	46c0      	nop			; (mov r8, r8)
2000002c:	46bd      	mov	sp, r7
2000002e:	bd80      	pop	{r7, pc}
20000030:	40020c00 	andmi	r0, r2, r0, lsl #24
20000034:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000038:	40020c08 	andmi	r0, r2, r8, lsl #24
2000003c:	40020c30 	andmi	r0, r2, r0, lsr ip

20000040 <keyb>:

unsigned char keyb(void){
20000040:	b580      	push	{r7, lr}
20000042:	b082      	sub	sp, #8
20000044:	af00      	add	r7, sp, #0
	int row, column;
	for (row = 1; row <= 4; row++){
20000046:	2301      	movs	r3, #1
20000048:	607b      	str	r3, [r7, #4]
2000004a:	e019      	b.n	20000080 <keyb+0x40>
		ActivateRow(row);
2000004c:	687b      	ldr	r3, [r7, #4]
2000004e:	0018      	movs	r0, r3
20000050:	f000 f824 	bl	2000009c <ActivateRow>
		if (column = ReadColumn()){
20000054:	f000 f84e 	bl	200000f4 <ReadColumn>
20000058:	0003      	movs	r3, r0
2000005a:	603b      	str	r3, [r7, #0]
2000005c:	683b      	ldr	r3, [r7, #0]
2000005e:	2b00      	cmp	r3, #0
20000060:	d00b      	beq.n	2000007a <keyb+0x3a>
			ActivateRow(0);
20000062:	2000      	movs	r0, #0
20000064:	f000 f81a 	bl	2000009c <ActivateRow>
			return Key[4*(row-1) + (column-1)];
20000068:	687b      	ldr	r3, [r7, #4]
2000006a:	3b01      	subs	r3, #1
2000006c:	009a      	lsls	r2, r3, #2
2000006e:	683b      	ldr	r3, [r7, #0]
20000070:	3b01      	subs	r3, #1
20000072:	18d3      	adds	r3, r2, r3
20000074:	4a08      	ldr	r2, [pc, #32]	; (20000098 <keyb+0x58>)
20000076:	5cd3      	ldrb	r3, [r2, r3]
20000078:	e009      	b.n	2000008e <keyb+0x4e>
	for (row = 1; row <= 4; row++){
2000007a:	687b      	ldr	r3, [r7, #4]
2000007c:	3301      	adds	r3, #1
2000007e:	607b      	str	r3, [r7, #4]
20000080:	687b      	ldr	r3, [r7, #4]
20000082:	2b04      	cmp	r3, #4
20000084:	dde2      	ble.n	2000004c <keyb+0xc>
		}
	}
	ActivateRow(0);
20000086:	2000      	movs	r0, #0
20000088:	f000 f808 	bl	2000009c <ActivateRow>
	return 0xFF;
2000008c:	23ff      	movs	r3, #255	; 0xff
}
2000008e:	0018      	movs	r0, r3
20000090:	46bd      	mov	sp, r7
20000092:	b002      	add	sp, #8
20000094:	bd80      	pop	{r7, pc}
20000096:	46c0      	nop			; (mov r8, r8)
20000098:	200001a8 	andcs	r0, r0, r8, lsr #3

2000009c <ActivateRow>:
void ActivateRow(char row){
2000009c:	b580      	push	{r7, lr}
2000009e:	b082      	sub	sp, #8
200000a0:	af00      	add	r7, sp, #0
200000a2:	0002      	movs	r2, r0
200000a4:	1dfb      	adds	r3, r7, #7
200000a6:	701a      	strb	r2, [r3, #0]
	switch(row){
200000a8:	1dfb      	adds	r3, r7, #7
200000aa:	781b      	ldrb	r3, [r3, #0]
200000ac:	2b04      	cmp	r3, #4
200000ae:	d818      	bhi.n	200000e2 <ActivateRow+0x46>
200000b0:	009a      	lsls	r2, r3, #2
200000b2:	4b0e      	ldr	r3, [pc, #56]	; (200000ec <ActivateRow+0x50>)
200000b4:	18d3      	adds	r3, r2, r3
200000b6:	681b      	ldr	r3, [r3, #0]
200000b8:	469f      	mov	pc, r3
		case 1: *GPIO_ODR_HIGH = 0x10; break;
200000ba:	4b0d      	ldr	r3, [pc, #52]	; (200000f0 <ActivateRow+0x54>)
200000bc:	2210      	movs	r2, #16
200000be:	701a      	strb	r2, [r3, #0]
200000c0:	e00f      	b.n	200000e2 <ActivateRow+0x46>
		case 2: *GPIO_ODR_HIGH = 0x20; break;
200000c2:	4b0b      	ldr	r3, [pc, #44]	; (200000f0 <ActivateRow+0x54>)
200000c4:	2220      	movs	r2, #32
200000c6:	701a      	strb	r2, [r3, #0]
200000c8:	e00b      	b.n	200000e2 <ActivateRow+0x46>
		case 3: *GPIO_ODR_HIGH = 0x40; break;
200000ca:	4b09      	ldr	r3, [pc, #36]	; (200000f0 <ActivateRow+0x54>)
200000cc:	2240      	movs	r2, #64	; 0x40
200000ce:	701a      	strb	r2, [r3, #0]
200000d0:	e007      	b.n	200000e2 <ActivateRow+0x46>
		case 4: *GPIO_ODR_HIGH = 0x80; break;
200000d2:	4b07      	ldr	r3, [pc, #28]	; (200000f0 <ActivateRow+0x54>)
200000d4:	2280      	movs	r2, #128	; 0x80
200000d6:	701a      	strb	r2, [r3, #0]
200000d8:	e003      	b.n	200000e2 <ActivateRow+0x46>
		case 0: *GPIO_ODR_HIGH = 0x00; break;
200000da:	4b05      	ldr	r3, [pc, #20]	; (200000f0 <ActivateRow+0x54>)
200000dc:	2200      	movs	r2, #0
200000de:	701a      	strb	r2, [r3, #0]
200000e0:	46c0      	nop			; (mov r8, r8)
	}
}
200000e2:	46c0      	nop			; (mov r8, r8)
200000e4:	46bd      	mov	sp, r7
200000e6:	b002      	add	sp, #8
200000e8:	bd80      	pop	{r7, pc}
200000ea:	46c0      	nop			; (mov r8, r8)
200000ec:	200001b8 			; <UNDEFINED> instruction: 0x200001b8
200000f0:	40020c15 	andmi	r0, r2, r5, lsl ip

200000f4 <ReadColumn>:
int ReadColumn (void){
200000f4:	b580      	push	{r7, lr}
200000f6:	b082      	sub	sp, #8
200000f8:	af00      	add	r7, sp, #0
	unsigned char c;
	c = *GPIO_IDR_HIGH;
200000fa:	4a12      	ldr	r2, [pc, #72]	; (20000144 <ReadColumn+0x50>)
200000fc:	1dfb      	adds	r3, r7, #7
200000fe:	7812      	ldrb	r2, [r2, #0]
20000100:	701a      	strb	r2, [r3, #0]
	if(c & 0x8) return 4;
20000102:	1dfb      	adds	r3, r7, #7
20000104:	781b      	ldrb	r3, [r3, #0]
20000106:	2208      	movs	r2, #8
20000108:	4013      	ands	r3, r2
2000010a:	d001      	beq.n	20000110 <ReadColumn+0x1c>
2000010c:	2304      	movs	r3, #4
2000010e:	e015      	b.n	2000013c <ReadColumn+0x48>
	if(c & 0x4) return 3;
20000110:	1dfb      	adds	r3, r7, #7
20000112:	781b      	ldrb	r3, [r3, #0]
20000114:	2204      	movs	r2, #4
20000116:	4013      	ands	r3, r2
20000118:	d001      	beq.n	2000011e <ReadColumn+0x2a>
2000011a:	2303      	movs	r3, #3
2000011c:	e00e      	b.n	2000013c <ReadColumn+0x48>
	if(c & 0x2) return 2;
2000011e:	1dfb      	adds	r3, r7, #7
20000120:	781b      	ldrb	r3, [r3, #0]
20000122:	2202      	movs	r2, #2
20000124:	4013      	ands	r3, r2
20000126:	d001      	beq.n	2000012c <ReadColumn+0x38>
20000128:	2302      	movs	r3, #2
2000012a:	e007      	b.n	2000013c <ReadColumn+0x48>
	if(c & 0x1) return 1;
2000012c:	1dfb      	adds	r3, r7, #7
2000012e:	781b      	ldrb	r3, [r3, #0]
20000130:	2201      	movs	r2, #1
20000132:	4013      	ands	r3, r2
20000134:	d001      	beq.n	2000013a <ReadColumn+0x46>
20000136:	2301      	movs	r3, #1
20000138:	e000      	b.n	2000013c <ReadColumn+0x48>
	return 0;
2000013a:	2300      	movs	r3, #0
}
2000013c:	0018      	movs	r0, r3
2000013e:	46bd      	mov	sp, r7
20000140:	b002      	add	sp, #8
20000142:	bd80      	pop	{r7, pc}
20000144:	40020c11 	andmi	r0, r2, r1, lsl ip

20000148 <out7seg>:
void out7seg(unsigned char c){
20000148:	b580      	push	{r7, lr}
2000014a:	b082      	sub	sp, #8
2000014c:	af00      	add	r7, sp, #0
2000014e:	0002      	movs	r2, r0
20000150:	1dfb      	adds	r3, r7, #7
20000152:	701a      	strb	r2, [r3, #0]
	if (c > 0xF){
20000154:	1dfb      	adds	r3, r7, #7
20000156:	781b      	ldrb	r3, [r3, #0]
20000158:	2b0f      	cmp	r3, #15
2000015a:	d903      	bls.n	20000164 <out7seg+0x1c>
		*GPIO_ODR_LOW = 0x00;
2000015c:	4b06      	ldr	r3, [pc, #24]	; (20000178 <out7seg+0x30>)
2000015e:	2200      	movs	r2, #0
20000160:	701a      	strb	r2, [r3, #0]
	}
	else *GPIO_ODR_LOW = Segcodes[c];
	}
20000162:	e005      	b.n	20000170 <out7seg+0x28>
	else *GPIO_ODR_LOW = Segcodes[c];
20000164:	4904      	ldr	r1, [pc, #16]	; (20000178 <out7seg+0x30>)
20000166:	1dfb      	adds	r3, r7, #7
20000168:	781b      	ldrb	r3, [r3, #0]
2000016a:	4a04      	ldr	r2, [pc, #16]	; (2000017c <out7seg+0x34>)
2000016c:	5cd3      	ldrb	r3, [r2, r3]
2000016e:	700b      	strb	r3, [r1, #0]
	}
20000170:	46c0      	nop			; (mov r8, r8)
20000172:	46bd      	mov	sp, r7
20000174:	b002      	add	sp, #8
20000176:	bd80      	pop	{r7, pc}
20000178:	40020c14 	andmi	r0, r2, r4, lsl ip
2000017c:	20000198 	mulcs	r0, r8, r1

20000180 <main>:
void main(void)
{
20000180:	b580      	push	{r7, lr}
20000182:	af00      	add	r7, sp, #0
	app_init();
20000184:	f7ff ff44 	bl	20000010 <app_init>
	while(1){
		out7seg(keyb());
20000188:	f7ff ff5a 	bl	20000040 <keyb>
2000018c:	0003      	movs	r3, r0
2000018e:	0018      	movs	r0, r3
20000190:	f7ff ffda 	bl	20000148 <out7seg>
20000194:	e7f8      	b.n	20000188 <main+0x8>
20000196:	46c0      	nop			; (mov r8, r8)

20000198 <Segcodes>:
20000198:	4f5b063f 	svcmi	0x005b063f
2000019c:	077d6d66 	ldrbeq	r6, [sp, -r6, ror #26]!
200001a0:	7c776f7f 	ldclvc	15, cr6, [r7], #-508	; 0xfffffe04
200001a4:	71795e39 	cmnvc	r9, r9, lsr lr

200001a8 <Key>:
200001a8:	0a030201 	beq	200c09b4 <Key+0xc080c>
200001ac:	0b060504 	bleq	201815c4 <Key+0x18141c>
200001b0:	0c090807 	stceq	8, cr0, [r9], {7}
200001b4:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000184 <main+0x4>
200001b8:	200000da 	ldrdcs	r0, [r0], -sl
200001bc:	200000ba 	strhcs	r0, [r0], -sl
200001c0:	200000c2 	andcs	r0, r0, r2, asr #1
200001c4:	200000ca 	andcs	r0, r0, sl, asr #1
200001c8:	200000d2 	ldrdcs	r0, [r0], -r2

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	00000184 	andeq	r0, r0, r4, lsl #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000091 	muleq	r0, r1, r0
  10:	00000c0c 	andeq	r0, r0, ip, lsl #24
	...
  20:	00380200 	eorseq	r0, r8, r0, lsl #4
  24:	00310000 	eorseq	r0, r1, r0
  28:	31030000 	mrscc	r0, (UNDEF: 3)
  2c:	0f000000 	svceq	0x00000000
  30:	07040400 	streq	r0, [r4, -r0, lsl #8]
  34:	0000013c 	andeq	r0, r0, ip, lsr r1
  38:	29080104 	stmdbcs	r8, {r2, r8}
  3c:	05000001 	streq	r0, [r0, #-1]
  40:	00000080 	andeq	r0, r0, r0, lsl #1
  44:	00211801 	eoreq	r1, r1, r1, lsl #16
  48:	03050000 	movweq	r0, #20480	; 0x5000
  4c:	20000198 	mulcs	r0, r8, r1
  50:	79654b06 	stmdbvc	r5!, {r1, r2, r8, r9, fp, lr}^
  54:	21190100 	tstcs	r9, r0, lsl #2
  58:	05000000 	streq	r0, [r0, #-0]
  5c:	0001a803 	andeq	sl, r1, r3, lsl #16
  60:	01450720 	cmpeq	r5, r0, lsr #14
  64:	45010000 	strmi	r0, [r1, #-0]
  68:	20000180 	andcs	r0, r0, r0, lsl #3
  6c:	00000016 	andeq	r0, r0, r6, lsl r0
  70:	6d089c01 	stcvs	12, cr9, [r8, #-4]
  74:	01000000 	mrseq	r0, (UNDEF: 0)
  78:	0001483f 	andeq	r4, r1, pc, lsr r8
  7c:	00003820 	andeq	r3, r0, r0, lsr #16
  80:	949c0100 	ldrls	r0, [ip], #256	; 0x100
  84:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
  88:	3f010063 	svccc	0x00010063
  8c:	00000038 	andeq	r0, r0, r8, lsr r0
  90:	00779102 	rsbseq	r9, r7, r2, lsl #2
  94:	0000750a 	andeq	r7, r0, sl, lsl #10
  98:	ba360100 	blt	d804a0 <startup-0x1f27fb60>
  9c:	f4000000 	vst4.8	{d0-d3}, [r0], r0
  a0:	54200000 	strtpl	r0, [r0], #-0
  a4:	01000000 	mrseq	r0, (UNDEF: 0)
  a8:	0000ba9c 	muleq	r0, ip, sl
  ac:	00630b00 	rsbeq	r0, r3, r0, lsl #22
  b0:	00383701 	eorseq	r3, r8, r1, lsl #14
  b4:	91020000 	mrsls	r0, (UNDEF: 2)
  b8:	040c0077 	streq	r0, [ip], #-119	; 0xffffff89
  bc:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
  c0:	00000800 	andeq	r0, r0, r0, lsl #16
  c4:	2d010000 	stccs	0, cr0, [r1, #-0]
  c8:	2000009c 	mulcs	r0, ip, r0
  cc:	00000058 	andeq	r0, r0, r8, asr r0
  d0:	00e59c01 	rsceq	r9, r5, r1, lsl #24
  d4:	72090000 	andvc	r0, r9, #0
  d8:	0100776f 	tsteq	r0, pc, ror #14
  dc:	0000e52d 	andeq	lr, r0, sp, lsr #10
  e0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
  e4:	08010400 	stmdaeq	r1, {sl}
  e8:	00000132 	andeq	r0, r0, r2, lsr r1
  ec:	0001370d 	andeq	r3, r1, sp, lsl #14
  f0:	38210100 	stmdacc	r1!, {r8}
  f4:	40000000 	andmi	r0, r0, r0
  f8:	5c200000 	stcpl	0, cr0, [r0], #-0
  fc:	01000000 	mrseq	r0, (UNDEF: 0)
 100:	0001659c 	muleq	r1, ip, r5
 104:	6f720b00 	svcvs	0x00720b00
 108:	22010077 	andcs	r0, r1, #119	; 0x77
 10c:	000000ba 	strheq	r0, [r0], -sl
 110:	0e749102 	expeqs	f1, f2
 114:	00000066 	andeq	r0, r0, r6, rrx
 118:	00ba2201 	adcseq	r2, sl, r1, lsl #4
 11c:	91020000 	mrsls	r0, (UNDEF: 2)
 120:	00000f70 	andeq	r0, r0, r0, ror pc
 124:	24010000 	strcs	r0, [r1], #-0
 128:	000000ba 	strheq	r0, [r0], -sl
 12c:	00000132 	andeq	r0, r0, r2, lsr r1
 130:	4c110010 	ldcmi	0, cr0, [r1], {16}
 134:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
 138:	0f000000 	svceq	0x00000000
 13c:	00000000 	andeq	r0, r0, r0
 140:	00ba2401 	adcseq	r2, sl, r1, lsl #8
 144:	014c0000 	mrseq	r0, (UNDEF: 76)
 148:	00100000 	andseq	r0, r0, r0
 14c:	00005411 	andeq	r5, r0, r1, lsl r4
 150:	00002620 	andeq	r2, r0, r0, lsr #12
 154:	00751200 	rsbseq	r1, r5, r0, lsl #4
 158:	25010000 	strcs	r0, [r1, #-0]
 15c:	000000ba 	strheq	r0, [r0], -sl
 160:	00000010 	andeq	r0, r0, r0, lsl r0
 164:	014a1300 	mrseq	r1, (UNDEF: 122)
 168:	1b010000 	blne	40170 <startup-0x1ffbfe90>
 16c:	20000010 	andcs	r0, r0, r0, lsl r0
 170:	00000030 	andeq	r0, r0, r0, lsr r0
 174:	89139c01 	ldmdbhi	r3, {r0, sl, fp, ip, pc}
 178:	01000000 	mrseq	r0, (UNDEF: 0)
 17c:	00000006 	andeq	r0, r0, r6
 180:	00000c20 	andeq	r0, r0, r0, lsr #24
 184:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	01010200 	mrseq	r0, R9_usr
  14:	13011349 	movwne	r1, #4937	; 0x1349
  18:	21030000 	mrscs	r0, (UNDEF: 3)
  1c:	2f134900 	svccs	0x00134900
  20:	0400000b 	streq	r0, [r0], #-11
  24:	0b0b0024 	bleq	2c00bc <startup-0x1fd3ff44>
  28:	0e030b3e 	vmoveq.16	d3[0], r0
  2c:	34050000 	strcc	r0, [r5], #-0
  30:	3a0e0300 	bcc	380c38 <startup-0x1fc7f3c8>
  34:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  38:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
  3c:	06000018 			; <UNDEFINED> instruction: 0x06000018
  40:	08030034 	stmdaeq	r3, {r2, r4, r5}
  44:	0b3b0b3a 	bleq	ec2d34 <startup-0x1f13d2cc>
  48:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
  4c:	00001802 	andeq	r1, r0, r2, lsl #16
  50:	3f002e07 	svccc	0x00002e07
  54:	3a0e0319 	bcc	380cc0 <startup-0x1fc7f340>
  58:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  5c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  60:	96184006 	ldrls	r4, [r8], -r6
  64:	00001942 	andeq	r1, r0, r2, asr #18
  68:	3f012e08 	svccc	0x00012e08
  6c:	3a0e0319 	bcc	380cd8 <startup-0x1fc7f328>
  70:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  74:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  78:	97184006 	ldrls	r4, [r8, -r6]
  7c:	13011942 	movwne	r1, #6466	; 0x1942
  80:	05090000 	streq	r0, [r9, #-0]
  84:	3a080300 	bcc	200c8c <startup-0x1fdff374>
  88:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  8c:	00180213 	andseq	r0, r8, r3, lsl r2
  90:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
  94:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  98:	0b3b0b3a 	bleq	ec2d88 <startup-0x1f13d278>
  9c:	13491927 	movtne	r1, #39207	; 0x9927
  a0:	06120111 			; <UNDEFINED> instruction: 0x06120111
  a4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  a8:	00130119 	andseq	r0, r3, r9, lsl r1
  ac:	00340b00 	eorseq	r0, r4, r0, lsl #22
  b0:	0b3a0803 	bleq	e820c4 <startup-0x1f17df3c>
  b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  b8:	00001802 	andeq	r1, r0, r2, lsl #16
  bc:	0b00240c 	bleq	90f4 <startup-0x1fff6f0c>
  c0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  c4:	0d000008 	stceq	0, cr0, [r0, #-32]	; 0xffffffe0
  c8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  cc:	0b3a0e03 	bleq	e838e0 <startup-0x1f17c720>
  d0:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  d4:	01111349 	tsteq	r1, r9, asr #6
  d8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  dc:	01194296 			; <UNDEFINED> instruction: 0x01194296
  e0:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
  e4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  e8:	0b3b0b3a 	bleq	ec2dd8 <startup-0x1f13d228>
  ec:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  f0:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
  f4:	03193f01 	tsteq	r9, #1, 30
  f8:	3b0b3a0e 	blcc	2ce938 <startup-0x1fd316c8>
  fc:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 100:	00130119 	andseq	r0, r3, r9, lsl r1
 104:	00181000 	andseq	r1, r8, r0
 108:	0b110000 	bleq	440110 <startup-0x1fbbfef0>
 10c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 110:	12000006 	andne	r0, r0, #6
 114:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 118:	0b3a0e03 	bleq	e8392c <startup-0x1f17c6d4>
 11c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 120:	0000193c 	andeq	r1, r0, ip, lsr r9
 124:	3f002e13 	svccc	0x00002e13
 128:	3a0e0319 	bcc	380d94 <startup-0x1fc7f26c>
 12c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 130:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 134:	97184006 	ldrls	r4, [r8, -r6]
 138:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000186 	andeq	r0, r0, r6, lsl #3
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	20000196 	mulcs	r0, r6, r1
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000e6 	andeq	r0, r0, r6, ror #1
   4:	00700002 	rsbseq	r0, r0, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	75676f4a 	strbvc	r6, [r7, #-3914]!	; 0xfffff0b6
  28:	6f442f73 	svcvs	0x00442f73
  2c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  30:	2f73746e 	svccs	0x0073746e
  34:	64757453 	ldrbtvs	r7, [r5], #-1107	; 0xfffffbad
  38:	2f726569 	svccs	0x00726569
  3c:	676f7250 			; <UNDEFINED> instruction: 0x676f7250
  40:	696d6172 	stmdbvs	sp!, {r1, r4, r5, r6, r8, sp, lr}^
  44:	4d2f676e 	stcmi	7, cr6, [pc, #-440]!	; fffffe94 <Key+0xdffffcec>
  48:	6570706f 	ldrbvs	r7, [r0, #-111]!	; 0xffffff91
  4c:	614c2f6e 	cmpvs	ip, lr, ror #30
  50:	726f6262 	rsbvc	r6, pc, #536870918	; 0x20000006
  54:	6f697461 	svcvs	0x00697461
  58:	2f72656e 	svccs	0x0072656e
  5c:	6b726f57 	blvs	1c9bdc0 <startup-0x1e364240>
  60:	6b6f6f42 	blvs	1bdbd70 <startup-0x1e424290>
  64:	79654b2f 	stmdbvc	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, lr}^
  68:	00646150 	rsbeq	r6, r4, r0, asr r1
  6c:	79654b00 	stmdbvc	r5!, {r8, r9, fp, lr}^
  70:	2e646170 	mcrcs	1, 3, r6, cr4, cr0, {3}
  74:	00010063 	andeq	r0, r1, r3, rrx
  78:	05000000 	streq	r0, [r0, #-0]
  7c:	00000002 	andeq	r0, r0, r2
  80:	5e131820 	cdppl	8, 1, cr1, cr3, cr0, {1}
  84:	01000302 	tsteq	r0, r2, lsl #6
  88:	02050001 	andeq	r0, r5, #1
  8c:	20000010 	andcs	r0, r0, r0, lsl r0
  90:	2f011a03 	svccs	0x00011a03
  94:	ae4b4b3d 	vmovge.8	d11[1], r4
  98:	754b3d3e 	strbvc	r3, [fp, #-3390]	; 0xfffff2c2
  9c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
  a0:	02008c02 	andeq	r8, r0, #512	; 0x200
  a4:	3c060104 	stfccs	f0, [r6], {4}
  a8:	213d4306 	teqcs	sp, r6, lsl #6
  ac:	4b916775 	blmi	fe459e88 <Key+0xde459ce0>
  b0:	4c4b4b4b 	mcrrmi	11, 4, r4, fp, cr11
  b4:	004b3e91 	umaaleq	r3, fp, r1, lr
  b8:	06010402 	streq	r0, [r1], -r2, lsl #8
  bc:	002f0658 	eoreq	r0, pc, r8, asr r6	; <UNPREDICTABLE>
  c0:	06010402 	streq	r0, [r1], -r2, lsl #8
  c4:	002f0658 	eoreq	r0, pc, r8, asr r6	; <UNPREDICTABLE>
  c8:	06010402 	streq	r0, [r1], -r2, lsl #8
  cc:	002f0658 	eoreq	r0, pc, r8, asr r6	; <UNPREDICTABLE>
  d0:	06010402 	streq	r0, [r1], -r2, lsl #8
  d4:	212f0658 			; <UNDEFINED> instruction: 0x212f0658
  d8:	3f4b6767 	svccc	0x004b6767
  dc:	2f84671f 	svccs	0x0084671f
  e0:	01040200 	mrseq	r0, R12_usr
  e4:	00070230 	andeq	r0, r7, r0, lsr r2
  e8:	Address 0x000000e8 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
   4:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
   8:	00776f52 	rsbseq	r6, r7, r2, asr pc
   c:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff5d1 <Key+0xdffff429>
  10:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  14:	676f4a2f 	strbvs	r4, [pc, -pc, lsr #20]!
  18:	442f7375 	strtmi	r7, [pc], #-885	; 20 <startup-0x1fffffe0>
  1c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
  20:	73746e65 	cmnvc	r4, #1616	; 0x650
  24:	7574532f 	ldrbvc	r5, [r4, #-815]!	; 0xfffffcd1
  28:	72656964 	rsbvc	r6, r5, #100, 18	; 0x190000
  2c:	6f72502f 	svcvs	0x0072502f
  30:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
  34:	2f676e69 	svccs	0x00676e69
  38:	70706f4d 	rsbsvc	r6, r0, sp, asr #30
  3c:	4c2f6e65 	stcmi	14, cr6, [pc], #-404	; fffffeb0 <Key+0xdffffd08>
  40:	6f626261 	svcvs	0x00626261
  44:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
  48:	72656e6f 	rsbvc	r6, r5, #1776	; 0x6f0
  4c:	726f572f 	rsbvc	r5, pc, #12320768	; 0xbc0000
  50:	6f6f426b 	svcvs	0x006f426b
  54:	654b2f6b 	strbvs	r2, [fp, #-3947]	; 0xfffff095
  58:	64615079 	strbtvs	r5, [r1], #-121	; 0xffffff87
  5c:	79654b2f 	stmdbvc	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, lr}^
  60:	2e646170 	mcrcs	1, 3, r6, cr4, cr0, {3}
  64:	6f630063 	svcvs	0x00630063
  68:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
  6c:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
  70:	67657337 			; <UNDEFINED> instruction: 0x67657337
  74:	61655200 	cmnvs	r5, r0, lsl #4
  78:	6c6f4364 	stclvs	3, cr4, [pc], #-400	; fffffef0 <Key+0xdffffd48>
  7c:	006e6d75 	rsbeq	r6, lr, r5, ror sp
  80:	63676553 	cmnvs	r7, #348127232	; 0x14c00000
  84:	7365646f 	cmnvc	r5, #1862270976	; 0x6f000000
  88:	61747300 	cmnvs	r4, r0, lsl #6
  8c:	70757472 	rsbsvc	r7, r5, r2, ror r4
  90:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
  94:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
  98:	332e3620 			; <UNDEFINED> instruction: 0x332e3620
  9c:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  a0:	30373130 	eorscc	r3, r7, r0, lsr r1
  a4:	20353132 	eorscs	r3, r5, r2, lsr r1
  a8:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  ac:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  b0:	415b2029 	cmpmi	fp, r9, lsr #32
  b4:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff36a <Key+0xdffff1c2>
  b8:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  bc:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  c0:	72622d36 	rsbvc	r2, r2, #3456	; 0xd80
  c4:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  c8:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  cc:	6f697369 	svcvs	0x00697369
  d0:	3432206e 	ldrtcc	r2, [r2], #-110	; 0xffffff92
  d4:	32313535 	eorscc	r3, r1, #222298112	; 0xd400000
  d8:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
  dc:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  e0:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  e4:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  e8:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  ec:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  f0:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
  f4:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
  f8:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
  fc:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
 100:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
 104:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
 108:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
 10c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
 110:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
 114:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
 118:	20672d20 	rsbcs	r2, r7, r0, lsr #26
 11c:	20304f2d 	eorscs	r4, r0, sp, lsr #30
 120:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
 124:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
 128:	736e7500 	cmnvc	lr, #0, 10
 12c:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 130:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 134:	6b007261 	blvs	1cac0 <startup-0x1ffe3540>
 138:	00627965 	rsbeq	r7, r2, r5, ror #18
 13c:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 140:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 144:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 148:	7061006e 	rsbvc	r0, r1, lr, rrx
 14c:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
 150:	Address 0x00000150 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000030 	andeq	r0, r0, r0, lsr r0
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000040 	andcs	r0, r0, r0, asr #32
  48:	0000005c 	andeq	r0, r0, ip, asr r0
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	100e4101 	andne	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	2000009c 	mulcs	r0, ip, r0
  68:	00000058 	andeq	r0, r0, r8, asr r0
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	100e4101 	andne	r4, lr, r1, lsl #2
  78:	00070d41 	andeq	r0, r7, r1, asr #26
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	200000f4 	strdcs	r0, [r0], -r4
  88:	00000054 	andeq	r0, r0, r4, asr r0
  8c:	40080e41 	andmi	r0, r8, r1, asr #28
  90:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  94:	100e4101 	andne	r4, lr, r1, lsl #2
  98:	00070d41 	andeq	r0, r7, r1, asr #26
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	20000148 	andcs	r0, r0, r8, asr #2
  a8:	00000038 	andeq	r0, r0, r8, lsr r0
  ac:	40080e41 	andmi	r0, r8, r1, asr #28
  b0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  b4:	100e4101 	andne	r4, lr, r1, lsl #2
  b8:	00070d41 	andeq	r0, r7, r1, asr #26
  bc:	00000018 	andeq	r0, r0, r8, lsl r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	20000180 	andcs	r0, r0, r0, lsl #3
  c8:	00000016 	andeq	r0, r0, r6, lsl r0
  cc:	40080e41 	andmi	r0, r8, r1, asr #28
  d0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  d4:	070d4101 	streq	r4, [sp, -r1, lsl #2]
